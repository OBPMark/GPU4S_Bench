#htvar kernel_code
void kernel kernel_matrix_convolution(global const bench_t* A,  global bench_t* B, global const bench_t* kernel_data, const int n, const int m, const int w, const int kernel_size, local bench_t* data, const int shared_size, const int kernel_rad){               
       int x = get_global_id(0);                                                                                                                                                                                                                                     
       int y = get_global_id(1);                                                                                                                                                                                                                                     
       unsigned int size = n;                                                                                                                                                                                                                                        
       int x0, y0;                                                                                                                                                                                                                                                   
       bench_t sum = 0;                                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                                     
       if (x < size && y < size){                                                                                                                                                                                                                                    
                //TOP right corner                                                                                                                                                                                                                                   
                x0 = x - kernel_rad;                                                                                                                                                                                                                                 
                y0 = y - kernel_rad;                                                                                                                                                                                                                                 
                if ( x0 < 0 || y0 < 0 )                                                                                                                                                                                                                              
                {                                                                                                                                                                                                                                                    
                    data[get_local_id(0) * shared_size + get_local_id(1)] = 0;                                                                                                                                                                                       
                }                                                                                                                                                                                                                                                    
                else                                                                                                                                                                                                                                                 
                {                                                                                                                                                                                                                                                    
                    data[get_local_id(0) * shared_size + get_local_id(1)] = A[x0 *size+y0];                                                                                                                                                                          
                }                                                                                                                                                                                                                                                    
                //BOTTOM right corner                                                                                                                                                                                                                                
                x0 = x + kernel_rad;                                                                                                                                                                                                                                 
                y0 = y - kernel_rad;                                                                                                                                                                                                                                 
                if ( x0 > size-1  || y0 < 0 )                                                                                                                                                                                                                        
                {                                                                                                                                                                                                                                                    
                    data[(get_local_id(0) + kernel_rad * 2) * shared_size + get_local_id(1)] = 0;                                                                                                                                                                    
                }                                                                                                                                                                                                                                                    
                else                                                                                                                                                                                                                                                 
                {                                                                                                                                                                                                                                                    
                   data[(get_local_id(0) + kernel_rad * 2) * shared_size + get_local_id(1)] = A[x0 *size+y0];                                                                                                                                                        
                }                                                                                                                                                                                                                                                    
                //TOP left corner                                                                                                                                                                                                                                    
                x0 = x - kernel_rad;                                                                                                                                                                                                                                 
                y0 = y + kernel_rad;                                                                                                                                                                                                                                 
                if ( x0 < 0  || y0 > size-1 )                                                                                                                                                                                                                        
                {                                                                                                                                                                                                                                                    
                   data[get_local_id(0) * shared_size + (get_local_id(1) + kernel_rad * 2)] = 0;                                                                                                                                                                     
                }                                                                                                                                                                                                                                                    
                else                                                                                                                                                                                                                                                 
                {                                                                                                                                                                                                                                                    
                   data[get_local_id(0) * shared_size + (get_local_id(1) + kernel_rad * 2)] = A[x0 *size+y0];                                                                                                                                                        
                }                                                                                                                                                                                                                                                    
                //BOTTOM left corner                                                                                                                                                                                                                                 
                x0 = x + kernel_rad;                                                                                                                                                                                                                                 
                y0 = y + kernel_rad;                                                                                                                                                                                                                                 
                if ( x0 > size-1  || y0 > size-1 )                                                                                                                                                                                                                   
                {                                                                                                                                                                                                                                                    
                   data[(get_local_id(0) + kernel_rad * 2) * shared_size + (get_local_id(1) + kernel_rad * 2)] = 0;                                                                                                                                                  
                }                                                                                                                                                                                                                                                    
                else                                                                                                                                                                                                                                                 
                {                                                                                                                                                                                                                                                    
                   data[(get_local_id(0) + kernel_rad * 2) * shared_size + (get_local_id(1) + kernel_rad * 2)] = A[x0 *size+y0];                                                                                                                                     
                }                                                                                                                                                                                                                                                    
                barrier(CLK_LOCAL_MEM_FENCE);                                                                                                                                                                                                                        
                unsigned int xa = kernel_rad + get_local_id(0);                                                                                                                                                                                                      
                unsigned int ya = kernel_rad + get_local_id(1);                                                                                                                                                                                                      
                for(int i = -kernel_rad; i <= kernel_rad; ++i)                                                                                                                                                                                                       
                {                                                                                                                                                                                                                                                    
                   for(int j = -kernel_rad; j <= kernel_rad; ++j)                                                                                                                                                                                                    
                    {                                                                                                                                                                                                                                                
                        sum += data[(xa + i) * shared_size +  (ya + j)] * kernel_data[(i+kernel_rad)* kernel_size + (j+kernel_rad)];                                                                                                                                 
                    }                                                                                                                                                                                                                                                
                }                                                                                                                                                                                                                                                    
               B[x*size+y ] = sum;                                                                                                                                                                                                                                   
       }                                                                                                                                                                                                                                                             
                                                                                                                                                                                                                                                                     
}
#htendvar